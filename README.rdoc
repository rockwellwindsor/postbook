# Ben Kinney - Ruby on Rails code project

This readme will serve as a walk-through to my process of building this project.

## Project Rubric

Here I will discuss the objectives of the project and how I solved for them

* User can register and then must be authenticated before logging in.

  * I too prefer to use Devise for this setup and was glad to see it mentioned in the project directions.  I used only the functions of Devise asked for in the project directions, ignoring the locking, omniauth functionality.

* Users can create posts (title, body, author)

  * Straightforward Ruby on Rails Scaffold. 

  ````
  $ rails g scaffold Post title:string body:text user:references
  ````

* Users can comment on other's posts

  * Same as the Post

  ````
  $ rails g scaffold Comment body:text user:references post:references
  ````

* The post index page serves as the site root page and shows all posts with title and author's name.

  * 

* Posts are order in Ascending order.

  * Set default scope for posts order in the model, post.rb.

* There is a post show page that shows a single post.  Underneath the posts are all the comments for that post, ordered by date (descending order).

  * Set default scope for comments order in the model, comment.rb.

* When commenting on a post the input field position is left up to the developer.

  *

## Project Requirements

* Upload to Github.

* Use latest version of Rails 4

  * I used 4.2.8.  It was the highest version of Rails 4.  I also have experience with Rails 5.

* Use Ruby 2.2 or greater

  * I used 2.2.2

* Rspec unit tests (minimum of 10).

* One feature test (rspec/capybara)

* Use whatever gems required to get the job done

  ###### Gem List

  This is a list of all the gems I added to the Gemfile and why I added them.

  * devise - User authentication
  * sendgrid - Email service
  * dotenv-rails - I prefer to use a .env file for environment variables on my local machine.
  * 

## Project Summary


# TO-DO
* Authenticate on the following pages
  * Posts
    * new, create, update, destroy
  * Comments
    * new, create, update, destroy
* Style email
* Style Authentication pages
* Style blog feed
* Authenticate Admin pages